{"remainingRequest":"/Users/dmitri/Documents/Новая папка/Check/node_modules/babel-loader/lib/index.js!/Users/dmitri/Documents/Новая папка/Check/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dmitri/Documents/Новая папка/Check/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dmitri/Documents/Новая папка/Check/src/components/FileUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dmitri/Documents/Новая папка/Check/src/components/FileUpload.vue","mtime":1623509977016},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"file-upload\",\n  data: function data() {\n    return {\n      json: null\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    console.log(this.ref);\n\n    document.getElementById(\"import\").onclick = function () {\n      var files = document.getElementById(\"selectFiles\").files;\n\n      if (files.length <= 0) {\n        return false;\n      }\n\n      var fr = new FileReader();\n\n      fr.onload = function (e) {\n        try {\n          _this.json = JSON.parse(e.target.result);\n        } catch (e) {\n          console.error(\"unable to parse json from mofile: \" + e.target.result);\n        }\n      };\n\n      fr.readAsText(files.item(0));\n    };\n  }\n};",{"version":3,"sources":["FileUpload.vue"],"names":[],"mappings":";;;;;;;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AAAA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,GAAA;;AACA,IAAA,QAAA,CAAA,cAAA,CAAA,QAAA,EAAA,OAAA,GAAA,YAAA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,cAAA,CAAA,aAAA,EAAA,KAAA;;AACA,UAAA,KAAA,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,eAAA,KAAA;AACA;;AAEA,UAAA,EAAA,GAAA,IAAA,UAAA,EAAA;;AAEA,MAAA,EAAA,CAAA,MAAA,GAAA,UAAA,CAAA,EAAA;AACA,YAAA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,SAFA,CAEA,OAAA,CAAA,EAAA;AACA,UAAA,OAAA,CAAA,KAAA,CAAA,uCAAA,CAAA,CAAA,MAAA,CAAA,MAAA;AACA;AACA,OANA;;AAOA,MAAA,EAAA,CAAA,UAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,KAhBA;AAiBA;AA1BA,CAAA","sourcesContent":["<template>\n  <div class=\"file-input\">\n    <input ref=\"fileRef\" type=\"file\" id=\"selectFiles\" value=\"Import\" /><br />\n    <button id=\"import\">Import The File!</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"file-upload\",\n  data() {\n    return {\n      json: null\n    };\n  },\n  created() {\n    console.log(this.ref);\n    document.getElementById(\"import\").onclick = () => {\n      const files = document.getElementById(\"selectFiles\").files;\n      if (files.length <= 0) {\n        return false;\n      }\n\n      const fr = new FileReader();\n\n      fr.onload = e => {\n        try {\n          this.json = JSON.parse(e.target.result);\n        } catch (e) {\n          console.error(\"unable to parse json from mofile: \" + e.target.result);\n        }\n      };\n      fr.readAsText(files.item(0));\n    };\n  }\n};\n</script>\n\n<style>\n.file-input {\n}\n</style>\n"],"sourceRoot":"src/components"}]}