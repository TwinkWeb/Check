{"remainingRequest":"/Users/dmitri/Documents/Новая папка/Check/node_modules/babel-loader/lib/index.js!/Users/dmitri/Documents/Новая папка/Check/node_modules/eslint-loader/index.js??ref--12-0!/Users/dmitri/Documents/Новая папка/Check/src/store/withdraw.state.js","dependencies":[{"path":"/Users/dmitri/Documents/Новая папка/Check/src/store/withdraw.state.js","mtime":1623509977028},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/dmitri/Documents/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/Check/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.number.constructor\";\n\nvar _mutations;\n\nimport * as types from \"@/store/mutation-types\";\nexport var payment = {\n  namespaced: true,\n  state: function state() {\n    return {\n      currencyPayment: \"QIWI\",\n      paymentTransactionLength: 1,\n      paymentTransactions: [],\n      disabledState: false,\n      paymentWays: [{\n        name: \"QIWI\"\n      }, {\n        name: \"YOMONEY\"\n      }, {\n        name: \"Tether\"\n      }, {\n        name: \"Etherium\"\n      }, {\n        name: \"Md\"\n      }, {\n        name: \"BITC\"\n      }, {\n        name: \"PM\"\n      }, {\n        name: \"Md UAH\"\n      }]\n    };\n  },\n  actions: {\n    setNewPayTransaction: function setNewPayTransaction(_ref) {\n      var commit = _ref.commit;\n      commit(types.SET_NEW_TRANSACTION);\n    },\n    setCurrentPayment: function setCurrentPayment(_ref2, name) {\n      var commit = _ref2.commit;\n      commit(types.SET_CURRENT_PAYMENT, name);\n    },\n    sendRequest: function sendRequest(_ref3) {\n      var commit = _ref3.commit;\n      commit(types.SET_DISABLED_STATE, true);\n      setTimeout(function () {\n        commit(types.SET_DISABLED_STATE, false);\n      }, 3000);\n    },\n    setPaymentTransactions: function setPaymentTransactions(_ref4, payload) {\n      var commit = _ref4.commit;\n      commit(types.SET_PAYMENT_TRANSACTION, payload);\n    }\n  },\n  getters: {\n    offerData: function offerData(s) {\n      return s.offerData;\n    },\n    currencyPayment: function currencyPayment(s) {\n      return s.currencyPayment;\n    },\n    disabledState: function disabledState(s) {\n      return s.disabledState;\n    },\n    paymentWays: function paymentWays(s) {\n      return s.paymentWays;\n    },\n    paymentTransactionLength: function paymentTransactionLength(s) {\n      return s.paymentTransactionLength;\n    },\n    payTransactions: function payTransactions(s) {\n      return s.paymentTransactions;\n    },\n    sumPaymentWithCommission: function sumPaymentWithCommission(s) {\n      return s.paymentTransactions.reduce(function (acc, current) {\n        if (current.paymentWay === \"QIWI\") {\n          return acc + Number(current.sum) * 0.02;\n        } else {\n          return acc;\n        }\n      }, 0);\n    },\n    sumPaymentTransactions: function sumPaymentTransactions(s) {\n      return s.paymentTransactions.reduce(function (acc, current) {\n        return acc + Number(current.sum);\n      }, 0);\n    }\n  },\n  mutations: (_mutations = {}, _defineProperty(_mutations, types.SET_NEW_TRANSACTION, function (state) {\n    if (state.paymentTransactionLength === 3) {\n      return;\n    } else {\n      state.paymentTransactionLength++;\n    }\n  }), _defineProperty(_mutations, types.SET_TAB_PAYMENT, function (state, payload) {\n    var transaction = state.paymentTransactions.find(function (c) {\n      return c.id === payload;\n    });\n    console.log(transaction);\n\n    if (transaction) {\n      state.currencyPayment = transaction.paymentWay;\n    }\n  }), _defineProperty(_mutations, types.SET_CURRENT_PAYMENT, function (state, payment) {\n    state.currencyPayment = payment;\n    state.validationError = \"\";\n  }), _defineProperty(_mutations, types.SET_VALIDATION_ERROR, function (state, messageError) {\n    state.validationError = messageError;\n  }), _defineProperty(_mutations, types.SET_PAYMENT_TRANSACTION, function (state, payload) {\n    var filteredTransactions = state.paymentTransactions.filter(function (c) {\n      return c.id != payload.id;\n    });\n    var paymentTransaction = {\n      purse: payload.purse,\n      sum: payload.sum,\n      id: payload.id,\n      paymentWay: state.currencyPayment\n    };\n    filteredTransactions.push(paymentTransaction);\n    state.paymentTransactions = filteredTransactions;\n  }), _defineProperty(_mutations, types.SET_DISABLED_STATE, function (state, payload) {\n    state.disabledState = payload;\n  }), _mutations)\n};",{"version":3,"sources":["/Users/dmitri/Documents/Новая папка/Check/src/store/withdraw.state.js"],"names":["types","payment","namespaced","state","currencyPayment","paymentTransactionLength","paymentTransactions","disabledState","paymentWays","name","actions","setNewPayTransaction","commit","SET_NEW_TRANSACTION","setCurrentPayment","SET_CURRENT_PAYMENT","sendRequest","SET_DISABLED_STATE","setTimeout","setPaymentTransactions","payload","SET_PAYMENT_TRANSACTION","getters","offerData","s","payTransactions","sumPaymentWithCommission","reduce","acc","current","paymentWay","Number","sum","sumPaymentTransactions","mutations","SET_TAB_PAYMENT","transaction","find","c","id","console","log","validationError","SET_VALIDATION_ERROR","messageError","filteredTransactions","filter","paymentTransaction","purse","push"],"mappings":"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","sourcesContent":["import * as types from \"@/store/mutation-types\";\n\nexport const payment = {\n  namespaced: true,\n  state: () => ({\n    currencyPayment: \"QIWI\",\n    paymentTransactionLength: 1,\n    paymentTransactions: [],\n    disabledState: false,\n    paymentWays: [\n      { name: \"QIWI\" },\n      { name: \"YOMONEY\" },\n      { name: \"Tether\" },\n      { name: \"Etherium\" },\n      { name: \"Md\" },\n      { name: \"BITC\" },\n      { name: \"PM\" },\n      { name: \"Md UAH\" }\n    ]\n  }),\n\n  actions: {\n    setNewPayTransaction({ commit }) {\n      commit(types.SET_NEW_TRANSACTION);\n    },\n    setCurrentPayment({ commit }, name) {\n      commit(types.SET_CURRENT_PAYMENT, name);\n    },\n    sendRequest({ commit }) {\n      commit(types.SET_DISABLED_STATE, true);\n      setTimeout(() => {\n        commit(types.SET_DISABLED_STATE, false);\n      }, 3000);\n    },\n\n    setPaymentTransactions({ commit }, payload) {\n      commit(types.SET_PAYMENT_TRANSACTION, payload);\n    }\n  },\n  getters: {\n    offerData: s => s.offerData,\n    currencyPayment: s => s.currencyPayment,\n    disabledState: s => s.disabledState,\n    paymentWays: s => s.paymentWays,\n    paymentTransactionLength: s => s.paymentTransactionLength,\n    payTransactions: s => s.paymentTransactions,\n    sumPaymentWithCommission: s =>\n      s.paymentTransactions.reduce(function(acc, current) {\n        if (current.paymentWay === \"QIWI\") {\n          return acc + Number(current.sum) * 0.02;\n        } else {\n          return acc;\n        }\n      }, 0),\n    sumPaymentTransactions: s =>\n      s.paymentTransactions.reduce(function(acc, current) {\n        return acc + Number(current.sum);\n      }, 0)\n  },\n\n  mutations: {\n    [types.SET_NEW_TRANSACTION](state) {\n      if (state.paymentTransactionLength === 3) {\n        return;\n      } else {\n        state.paymentTransactionLength++;\n      }\n    },\n    [types.SET_TAB_PAYMENT](state, payload) {\n      const transaction = state.paymentTransactions.find(c => c.id === payload);\n      console.log(transaction);\n      if (transaction) {\n        state.currencyPayment = transaction.paymentWay;\n      }\n    },\n    [types.SET_CURRENT_PAYMENT](state, payment) {\n      state.currencyPayment = payment;\n      state.validationError = \"\";\n    },\n\n    [types.SET_VALIDATION_ERROR](state, messageError) {\n      state.validationError = messageError;\n    },\n\n    [types.SET_PAYMENT_TRANSACTION](state, payload) {\n      let filteredTransactions = state.paymentTransactions.filter(\n        c => c.id != payload.id\n      );\n\n      const paymentTransaction = {\n        purse: payload.purse,\n        sum: payload.sum,\n        id: payload.id,\n        paymentWay: state.currencyPayment\n      };\n      filteredTransactions.push(paymentTransaction);\n      state.paymentTransactions = filteredTransactions;\n    },\n\n    [types.SET_DISABLED_STATE](state, payload) {\n      state.disabledState = payload;\n    }\n  }\n};\n"]}]}