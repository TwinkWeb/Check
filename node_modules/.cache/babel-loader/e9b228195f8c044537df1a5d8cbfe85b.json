{"remainingRequest":"/Users/dmitri/Documents/Новая папка/Check/node_modules/babel-loader/lib/index.js!/Users/dmitri/Documents/Новая папка/Check/node_modules/eslint-loader/index.js??ref--12-0!/Users/dmitri/Documents/Новая папка/Check/src/store/currency.store.js","dependencies":[{"path":"/Users/dmitri/Documents/Новая папка/Check/src/store/currency.store.js","mtime":1623509977028},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/dmitri/Documents/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/Check/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\n\nvar _mutations;\n\nimport * as types from \"@/store/mutation-types\";\n\nvar _currencyOptions = new Map([[\"RUB\", {\n  id: \"RUB\",\n  viewValue: \"Рубль\"\n}], [\"USD\", {\n  id: \"USD\",\n  viewValue: \"Dollar\"\n}], [\"CNY\", {\n  id: \"CNY\",\n  viewValue: \"元\"\n}]]);\n\nexport var currency = {\n  namespaced: true,\n  state: {\n    currency: \"USD\",\n    loaded: false,\n    items: []\n  },\n  getters: {\n    currencyData: function currencyData(state) {\n      if (state.loaded) {\n        var data = state.items.find(function (item) {\n          return item.currency === state.currency;\n        });\n\n        if (data) {\n          return data;\n        } else {\n          console.log(\"No currency data found by: \" + state.currency);\n        }\n      }\n    },\n    currencyOptions: function currencyOptions(state) {\n      return state.items.map(function (x) {\n        return _currencyOptions.get(x.currency);\n      });\n    },\n    currency: function currency(state) {\n      return state.currency;\n    }\n  },\n  mutations: (_mutations = {}, _defineProperty(_mutations, types.ADD_CURRENCIES, function (state, currencies) {\n    state.items = currencies;\n  }), _defineProperty(_mutations, types.SET_CURRENCY, function (state, currency) {\n    state.currency = currency;\n  }), _defineProperty(_mutations, types.SET_CURRENCY_LOADED, function (state, loaded) {\n    state.loaded = loaded;\n  }), _mutations),\n  actions: {\n    addCurrencies: function addCurrencies(_ref, payload) {\n      var commit = _ref.commit;\n      commit(types.ADD_CURRENCIES, payload);\n    },\n    setCurrency: function setCurrency(_ref2, currency) {\n      var commit = _ref2.commit;\n      commit(types.SET_CURRENCY, currency);\n    },\n    setLoaded: function setLoaded(_ref3, loaded) {\n      var commit = _ref3.commit;\n      commit(types.SET_CURRENCY_LOADED, loaded);\n    }\n  }\n};",{"version":3,"sources":["/Users/dmitri/Documents/Новая папка/Check/src/store/currency.store.js"],"names":["types","currencyOptions","Map","id","viewValue","currency","namespaced","state","loaded","items","getters","currencyData","data","find","item","console","log","map","x","get","mutations","ADD_CURRENCIES","currencies","SET_CURRENCY","SET_CURRENCY_LOADED","actions","addCurrencies","payload","commit","setCurrency","setLoaded"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;;AAEA,IAAMC,gBAAe,GAAG,IAAIC,GAAJ,CAAQ,CAC9B,CAAC,KAAD,EAAQ;AAAEC,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,SAAS,EAAE;AAAxB,CAAR,CAD8B,EAE9B,CAAC,KAAD,EAAQ;AAAED,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,SAAS,EAAE;AAAxB,CAAR,CAF8B,EAG9B,CAAC,KAAD,EAAQ;AAAED,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,SAAS,EAAE;AAAxB,CAAR,CAH8B,CAAR,CAAxB;;AAMA,OAAO,IAAMC,QAAQ,GAAG;AACtBC,EAAAA,UAAU,EAAE,IADU;AAEtBC,EAAAA,KAAK,EAAE;AACLF,IAAAA,QAAQ,EAAE,KADL;AAELG,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,KAAK,EAAE;AAHF,GAFe;AAQtBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAE,sBAAAJ,KAAK,EAAI;AACrB,UAAIA,KAAK,CAACC,MAAV,EAAkB;AAChB,YAAMI,IAAI,GAAGL,KAAK,CAACE,KAAN,CAAYI,IAAZ,CAAiB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACT,QAAL,KAAkBE,KAAK,CAACF,QAA5B;AAAA,SAArB,CAAb;;AACA,YAAIO,IAAJ,EAAU;AACR,iBAAOA,IAAP;AACD,SAFD,MAEO;AACLG,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCT,KAAK,CAACF,QAAlD;AACD;AACF;AACF,KAVM;AAWPJ,IAAAA,eAAe,EAAE,yBAAAM,KAAK;AAAA,aACpBA,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAgB,UAAAC,CAAC;AAAA,eAAIjB,gBAAe,CAACkB,GAAhB,CAAoBD,CAAC,CAACb,QAAtB,CAAJ;AAAA,OAAjB,CADoB;AAAA,KAXf;AAaPA,IAAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,aAAIA,KAAK,CAACF,QAAV;AAAA;AAbR,GARa;AAwBtBe,EAAAA,SAAS,gDACNpB,KAAK,CAACqB,cADA,YACgBd,KADhB,EACuBe,UADvB,EACmC;AACxCf,IAAAA,KAAK,CAACE,KAAN,GAAca,UAAd;AACD,GAHM,+BAINtB,KAAK,CAACuB,YAJA,YAIchB,KAJd,EAIqBF,QAJrB,EAI+B;AACpCE,IAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACD,GANM,+BAONL,KAAK,CAACwB,mBAPA,YAOqBjB,KAPrB,EAO4BC,MAP5B,EAOoC;AACzCD,IAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACD,GATM,cAxBa;AAoCtBiB,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,+BACmBC,OADnB,EAC4B;AAAA,UAAnBC,MAAmB,QAAnBA,MAAmB;AACjCA,MAAAA,MAAM,CAAC5B,KAAK,CAACqB,cAAP,EAAuBM,OAAvB,CAAN;AACD,KAHM;AAIPE,IAAAA,WAJO,8BAIiBxB,QAJjB,EAI2B;AAAA,UAApBuB,MAAoB,SAApBA,MAAoB;AAChCA,MAAAA,MAAM,CAAC5B,KAAK,CAACuB,YAAP,EAAqBlB,QAArB,CAAN;AACD,KANM;AAOPyB,IAAAA,SAPO,4BAOetB,MAPf,EAOuB;AAAA,UAAlBoB,MAAkB,SAAlBA,MAAkB;AAC5BA,MAAAA,MAAM,CAAC5B,KAAK,CAACwB,mBAAP,EAA4BhB,MAA5B,CAAN;AACD;AATM;AApCa,CAAjB","sourcesContent":["import * as types from \"@/store/mutation-types\";\n\nconst currencyOptions = new Map([\n  [\"RUB\", { id: \"RUB\", viewValue: \"Рубль\" }],\n  [\"USD\", { id: \"USD\", viewValue: \"Dollar\" }],\n  [\"CNY\", { id: \"CNY\", viewValue: \"元\" }]\n]);\n\nexport const currency = {\n  namespaced: true,\n  state: {\n    currency: \"USD\",\n    loaded: false,\n    items: []\n  },\n\n  getters: {\n    currencyData: state => {\n      if (state.loaded) {\n        const data = state.items.find(item => item.currency === state.currency);\n        if (data) {\n          return data;\n        } else {\n          console.log(\"No currency data found by: \" + state.currency);\n        }\n      }\n    },\n    currencyOptions: state =>\n      state.items.map(x => currencyOptions.get(x.currency)),\n    currency: state => state.currency\n  },\n\n  mutations: {\n    [types.ADD_CURRENCIES](state, currencies) {\n      state.items = currencies;\n    },\n    [types.SET_CURRENCY](state, currency) {\n      state.currency = currency;\n    },\n    [types.SET_CURRENCY_LOADED](state, loaded) {\n      state.loaded = loaded;\n    }\n  },\n\n  actions: {\n    addCurrencies({ commit }, payload) {\n      commit(types.ADD_CURRENCIES, payload);\n    },\n    setCurrency({ commit }, currency) {\n      commit(types.SET_CURRENCY, currency);\n    },\n    setLoaded({ commit }, loaded) {\n      commit(types.SET_CURRENCY_LOADED, loaded);\n    }\n  }\n};\n"]}]}