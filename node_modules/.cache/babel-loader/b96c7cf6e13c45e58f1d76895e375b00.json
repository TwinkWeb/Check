{"remainingRequest":"/Users/dmitri/Documents/Новая папка/Check/node_modules/babel-loader/lib/index.js!/Users/dmitri/Documents/Новая папка/Check/node_modules/eslint-loader/index.js??ref--12-0!/Users/dmitri/Documents/Новая папка/Check/src/modules/interceptors/auth-interceptor.js","dependencies":[{"path":"/Users/dmitri/Documents/Новая папка/Check/src/modules/interceptors/auth-interceptor.js","mtime":1623509977027},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/dmitri/Documents/Новая папка/Check/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"axios\";\n\nfunction setup(store) {\n  axios.interceptors.request.use(function (config) {\n    var token = store.state.auth.session.token;\n\n    if (token) {\n      config.headers.Authorization = \"Bearer \".concat(token);\n    }\n\n    return config;\n  }, function (err) {\n    return Promise.reject(err);\n  });\n}\n\nexport default setup;",{"version":3,"sources":["/Users/dmitri/Documents/Новая папка/Check/src/modules/interceptors/auth-interceptor.js"],"names":["axios","setup","store","interceptors","request","use","config","token","state","auth","session","headers","Authorization","err","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpBF,EAAAA,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAASC,MAAT,EAAiB;AACf,QAAMC,KAAK,GAAGL,KAAK,CAACM,KAAN,CAAYC,IAAZ,CAAiBC,OAAjB,CAAyBH,KAAvC;;AACA,QAAIA,KAAJ,EAAW;AACTD,MAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,oBAAyCL,KAAzC;AACD;;AACD,WAAOD,MAAP;AACD,GAPH,EAQE,UAASO,GAAT,EAAc;AACZ,WAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,GAVH;AAYD;;AAED,eAAeZ,KAAf","sourcesContent":["import axios from \"axios\";\n\nfunction setup(store) {\n  axios.interceptors.request.use(\n    function(config) {\n      const token = store.state.auth.session.token;\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    },\n    function(err) {\n      return Promise.reject(err);\n    }\n  );\n}\n\nexport default setup;\n"]}]}